type ActivitySearchResult {
  id: ID!
  activityType: String
  activitySubType: String
  ascent: Int
  descent: Int
  maxHr: Int
  avHr: Int
  duration: Int
  distance: Int
  maxSpeed: Float
  avSpeed: Float
  device: String
  date: String
  lastUpdate: String
  count: Int
}

input Parameter {
  name: String
  value: String
  type: ParamType
}
enum ParamType {
  STRING,
  BOOLEAN,
  NUMBER
}

type Mutation {
  addUser(
    height: Int!,
    weight: Int!,
    gender: Int!,
    hrZones: [Int]!
  ): User
  saveHeight(id: ID!, height: Int!): User
  saveWeight(id: ID!, weight: Int!): User
  saveGender(id: ID!, gender: String!): User
  saveHrZones(id: ID!, hrZones: [Int]!): User
  addTag(id: ID!, tag: String!): String
  deleteTag(id: ID!, tag: String!): String
  renameTag(id: ID!, tag: String!, newName: String!): String
}

enum Operator {
  EQ
  NE
  GT
  GTE
  LT
  LTE
  LIKE
  STARTS_WITH

}
enum DataType {
  STRING
  INT
  FLOAT
  BOOLEAN
  DATE
}
input Criteria {
  name: String
  value: String
  operator: Operator
  type: DataType
}
input PageInfo {
  pageSize: Int
  pageNumber: Int
}

input OrderInfo {
  attribute: String!
  asc: Boolean
}
type Query {
  getUser: User
  getActivities(sql: String!, parameters: [Parameter]!): [String]!
  searchActivities(predicates: [Criteria]!, pagination: PageInfo, order: OrderInfo): [ActivitySearchResult]
}

type Schema {
  query: Query
  mutation: Mutation
}

type User {
  id: ID!
  gender: String
  height: Int
  weight: Int
  hrZones: [Int]
  tags: [String]
  devices: [String]
  activityTypes: [String]
}
